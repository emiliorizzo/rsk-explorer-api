function rawBlockToEntity ({
  number,
  hash,
  miner,
  parentHash,
  sha3Uncles,
  logsBloom,
  transactionsRoot,
  stateRoot,
  receiptsRoot,
  difficulty,
  totalDifficulty,
  extraData,
  size,
  gasLimit,
  gasUsed,
  timestamp,
  minimumGasPrice,
  bitcoinMergedMiningHeader,
  bitcoinMergedMiningCoinbaseTransaction,
  bitcoinMergedMiningMerkleProof,
  hashForMergedMining,
  paidFees,
  cumulativeDifficulty,
  received
}) {
  return {
    number,
    hash,
    miner,
    parentHash,
    sha3Uncles,
    logsBloom,
    transactionsRoot,
    stateRoot,
    receiptsRoot,
    difficulty,
    totalDifficulty,
    extraData,
    size,
    gasLimit,
    gasUsed,
    timestamp: String(timestamp),
    minimumGasPrice,
    bitcoinMergedMiningHeader,
    bitcoinMergedMiningCoinbaseTransaction,
    bitcoinMergedMiningMerkleProof,
    hashForMergedMining,
    paidFees,
    cumulativeDifficulty,
    received: String(received)
  }
}

function blockEntityToRaw ({
  number,
  hash,
  miner,
  parentHash,
  sha3Uncles,
  logsBloom,
  transactionsRoot,
  stateRoot,
  receiptsRoot,
  difficulty,
  totalDifficulty,
  extraData,
  size,
  gasLimit,
  gasUsed,
  timestamp,
  minimumGasPrice,
  bitcoinMergedMiningHeader,
  bitcoinMergedMiningCoinbaseTransaction,
  bitcoinMergedMiningMerkleProof,
  hashForMergedMining,
  paidFees,
  cumulativeDifficulty,
  received,
  uncle,
  transaction_transaction_block_numberToblock: transactions
}) {
  return {
    number,
    hash,
    miner,
    parentHash,
    sha3Uncles,
    logsBloom,
    transactionsRoot,
    stateRoot,
    receiptsRoot,
    difficulty,
    totalDifficulty,
    extraData,
    size,
    gasLimit,
    gasUsed,
    timestamp: Number(timestamp),
    minimumGasPrice,
    bitcoinMergedMiningHeader,
    bitcoinMergedMiningCoinbaseTransaction,
    bitcoinMergedMiningMerkleProof,
    hashForMergedMining,
    paidFees,
    cumulativeDifficulty,
    _received: Number(received),
    uncles: uncle.map(({hash}) => hash),
    transactions: transactions.map(({hash}) => hash)
  }
}

export {rawBlockToEntity, blockEntityToRaw}
